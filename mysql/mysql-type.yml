tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: mysql-type
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: MySQL RDBMS installation on a specific mounted volume path.

imports:
  - tosca-normative-types:1.0.0-ALIEN14

node_types:
  org.alien4cloud.nodes.AbstractMysql:
    abstract: true
    derived_from: tosca.nodes.Database
    description: A node that provides a mysql endpoint.
    metadata:
      icon: /images/mysql.png
    capabilities:
      database_endpoint: org.alien4cloud.capabilities.MysqlDatabaseEndpoint

  # note that this type is just used for simple samples. From a perfect TOSCA modeling perspective we should actually separate the MySQL DBMS and Database types.
  org.alien4cloud.nodes.Mysql:
    derived_from: org.alien4cloud.nodes.AbstractMysql
    description: >
      A node to install MySQL v5.5 database with data
      on a specific attached volume.
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [1, 1]
          node_filter:
            capabilities:
              - tosca.capabilities.OperatingSystem:
                  properties:
                    - type: { equal: linux }
                    - architecture: { equal: x86_64 }
                    - distribution: { valid_values: [ debian, ubuntu, knoppix ] }
    metadata:
      icon: /images/mysql.png
    properties:
      port:
        type: integer
        default: 3306
        description: The port on which the underlying database service will listen to data.
      name:
        type: string
        required: true
        default: wordpress
        description: The logical name of the database.
      db_user:
        type: string
        default: pass
        description: The special user account used for database administration.
      db_password:
        type: string
        default: pass
        description: The password associated with the user account provided in the ‘db_user’ property.
      bind_address:
        type: boolean
        default: true
        required: false
        description: If true,the server accepts TCP/IP connections on all server host IPv4 interfaces.
      storage_path:
        type: string
        default: /mountedStorage
        constraints:
          - valid_values: [ "/mountedStorage", "/var/mysql" ]
    interfaces:
      Standard:
        create: scripts/install_mysql.sh
        start:
          inputs:
            VOLUME_HOME: { get_property: [SELF, storage_path] }
            PORT: { get_property: [SELF, port] }
            DB_NAME: { get_property: [SELF, name] }
            DB_USER: { get_property: [SELF, db_user] }
            DB_PASSWORD: { get_property: [SELF, db_password] }
            BIND_ADDRESS: { get_property: [SELF, bind_address] }
          implementation: scripts/start_mysql.sh
    artifacts:
      - configs:
          file: configs
          type: tosca.artifacts.File

capability_types:
  org.alien4cloud.capabilities.MysqlDatabaseEndpoint:
      derived_from: tosca.capabilities.Endpoint.Database
