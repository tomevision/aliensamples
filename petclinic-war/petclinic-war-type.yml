tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: petclinic-war-type
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: A petclinic war component

imports:
  - tosca-normative-types:1.0.0-ALIEN14
  - tomcat-war-types:1.4.0-SNAPSHOT
  - mysql-type:1.4.0-SNAPSHOT
  - postgresql-type:1.4.0-SNAPSHOT

repositories:
  fastconnect_nexus:
    url: https://fastconnect.org/maven/content/repositories/opensource-snapshot
    type: maven

node_types:
  alien.nodes.Petclinic:
    derived_from: org.alien4cloud.nodes.War
    description: The TOSCA petclinic Type represents spring sample application.
    artifacts:
      - war_file:
          file: org.springframework.samples:spring-petclinic:4.2.6-SNAPSHOT@war
          type: tosca.artifacts.File
          repository: fastconnect_nexus
    requirements:
      - database:
          capability: tosca.capabilities.Endpoint.Database
          occurrences: [1, 1]

relationship_types:
  alien.relationships.PetclinicConnectsToMysql:
    derived_from: tosca.relationships.ConnectsTo
    description: Relationship use to connect the Petclinic with a Mysql database
    valid_target_types: [ org.alien4cloud.capabilities.MysqlDatabaseEndpoint ]
    interfaces:
      configure:
        post_configure_source:
          inputs:
            DB_USER: { get_property: [TARGET, db_user] }
            DB_PASS: { get_property: [TARGET, db_password] }
            DB_IP: { get_attribute: [TARGET, ip_address] }
            DB_PORT: { get_property: [TARGET, port] }
            DB_NAME: { get_property: [TARGET, name] }
            CONTEXT_PATH: { get_property: [SOURCE, app_endpoint, url_path] }
          implementation: scripts/install_petclinic_mysql.sh

  alien.relationships.PetclinicConnectsToPostgresql:
    derived_from: tosca.relationships.ConnectsTo
    description: Relationship use to connect the Petclinic with a Postgresql database
    valid_target_types: [ org.alien4cloud.capabilities.PostgresqlDatabaseEndpoint ]
    interfaces:
      configure:
        post_configure_source:
          inputs:
            DB_USER: { get_property: [TARGET, user] }
            DB_PASS: { get_property: [TARGET, password] }
            DB_IP: { get_attribute: [TARGET, ip_address] }
            DB_PORT: { get_property: [TARGET, port] }
            DB_NAME: { get_property: [TARGET, name] }
            CONTEXT_PATH: { get_property: [SOURCE, app_endpoint, url_path] }
          implementation: scripts/install_petclinic_postgresql.sh
