tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: alien-type
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: TOSCA simple profile with Alien.

imports:
  - tosca-normative-types:1.0.0-ALIEN14
  - org.alien4cloud.lang.java.jdk.linux:1.4.0-SNAPSHOT
  - elasticsearch-type:1.4.0-SNAPSHOT

node_types:
  org.alien4cloud.nodes.Alien:
    derived_from: org.alien4cloud.lang.java.pub.nodes.JavaSoftware
    description: The TOSCA Alien Node Type represents an alien component.
    metadata:
      icon: /images/alien4cloud-logo.png
    properties:
      alien_url:
        type: string
        required: true
        default: "https://fastconnect.org/maven/content/repositories/opensource/alien4cloud/alien4cloud-ui/1.3.0-RC5/alien4cloud-ui-1.3.0-RC5.war"
      context_root:
        type: string
        default: "/"
      app_args:
        type: string
        required: false
        default: ""
    capabilities:
      alien:
        type: org.alien4cloud.capabilities.Alien
        occurrences: [ 0, UNBOUNDED ]
    requirements:
      - elasticsearch:
          capability: org.alien4cloud.capabilities.ElasticSearch
          relationship: org.alien4cloud.relationships.AlienConnectToElasticSearch
          occurrences: [ 1, UNBOUNDED ]
    interfaces:
      Standard:
        create:
          inputs:
            APPLICATION_URL: { get_property: [SELF, alien_url] }
            APP_ARGS: { get_property: [SELF, app_args] }
          implementation: scripts/alien/install_alien.sh
        start: scripts/alien/start_alien.sh
    artifacts:
      - configs:
          file: configs
          type: tosca.artifacts.File
      - bin:
          file: bin
          type: tosca.artifacts.File

  # We should be able to provide transitive host requirements (to limit the os through node filter).
  org.alien4cloud.nodes.AlienIT:
    derived_from: org.alien4cloud.lang.java.pub.nodes.JavaSoftware
    description: Alien 4 cloud java client application that performs Integration tests against alien4cloud.
    metadata:
      icon: /images/alien4cloud-logo.png
    properties:
      branch:
        type: string
        required: true
        default: "develop"
      openstack_manager_name:
        type: string
        required: false
        default: ""
      amazon_manager_ip:
        type: string
        default: ""
        required: false
      plugin_version:
        type: string
        default: ""
      it_test:
        type: string
        required: true
        default: ""
    requirements:
      - elasticsearch:
          capability: org.alien4cloud.capabilities.ElasticSearch
          relationship: org.alien4cloud.relationships.AlienITConnectToElasticSearch
      - alien:
          capability: org.alien4cloud.capabilities.Alien
          relationship: org.alien4cloud.relationships.AlienITDependsOnAlien
    interfaces:
      Standard:
        create:
          inputs:
            BRANCH: { get_property: [SELF, branch] }
            MANAGER_NAME: { get_property: [SELF, openstack_manager_name] }
            PLUGIN_VERSION: { get_property: [SELF, plugin_version] }
          implementation: scripts/it/install_it.sh
        start:
          inputs:
            IT_TEST: { get_property: [SELF, it_test] }
            AWS_CLOUDIFY3_MANAGER_URL: { get_property: [SELF, amazon_manager_ip] }
          implementation: scripts/it/start_it.sh
    artifacts:
      - configs:
          file: configs
          type: tosca.artifacts.File
      - bin:
          file: bin
          type: tosca.artifacts.File

relationship_types:
  org.alien4cloud.relationships.AlienConnectToElasticSearch:
    derived_from: tosca.relationships.ConnectsTo
    description: Relationship use to describe that the Alien is connect on the target Elasticsearch.
    valid_target_types: [ org.alien4cloud.capabilities.ElasticSearch ]
    interfaces:
      Configure:
          pre_configure_source:
            inputs:
              ES_IP: { get_attribute: [TARGET, ip_address] }
            implementation: scripts/alien/config_alien.sh
  org.alien4cloud.relationships.AlienITConnectToElasticSearch:
    derived_from: tosca.relationships.ConnectsTo
    description: Relationship use to describe that the Alien is connect on the target Elasticsearch.
    valid_target_types: [ alien.capabilities.ElasticSearch ]
    interfaces:
      Configure:
          pre_configure_source:
            inputs:
              ES_IP: { get_attribute: [TARGET, ip_address] }
            implementation: scripts/it/config_it.sh
  org.alien4cloud.relationships.AlienITDependsOnAlien:
    derived_from: tosca.relationships.DependsOn
    description: Relationship use to describe that AlienIT needs Alien.
    valid_target_types: [ alien.capabilities.Alien ]

capability_types:
  org.alien4cloud.capabilities.Alien:
    derived_from: tosca.capabilities.Attachment
